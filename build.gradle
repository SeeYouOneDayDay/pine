// Top-level build file where you can add configuration options common to all sub-projects/modules.

// Load local.properties into gradle
def localProperties = new Properties()
def ins = rootProject.file('local.properties').newDataInputStream()
localProperties.load(ins)
ins.close()

buildscript {
    repositories {
        // // fix some exception: Could not resolve all files for configuration ':app:lintClassPath'.
        //maven { url "https://maven.google.com" }
        mavenLocal()
        mavenCentral()
        google()
        jcenter()
        maven { url "https://jitpack.io" }
        // jcenter() { url "http://jcenter.bintray.com/" }
        maven { url 'https://repo1.maven.org/maven2/' }
        // central
        maven { url 'https://maven.aliyun.com/nexus/content/repositories/central' }
        // jcenter
        maven { url 'https://maven.aliyun.com/nexus/content/repositories/jcenter' }
        // public
        maven { url 'https://maven.aliyun.com/nexus/content/groups/public' }
        //google
        maven { url 'https://maven.aliyun.com/nexus/content/repositories/google' }
        //gradle-plugin
        maven { url 'https://maven.aliyun.com/nexus/content/repositories/gradle-plugin' }
        //apache snapshots
        maven { url 'https://maven.aliyun.com/nexus/content/repositories/apache-snapshots' }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:7.4.1'
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    localProperties.forEach { key, value -> setProperty(key, value) }

    repositories {
        // // fix some exception: Could not resolve all files for configuration ':app:lintClassPath'.
        //maven { url "https://maven.google.com" }
        mavenLocal()
        mavenCentral()
        google()
        jcenter()
        maven { url "https://jitpack.io" }
        // jcenter() { url "http://jcenter.bintray.com/" }
        maven { url 'https://repo1.maven.org/maven2/' }
        // central
        maven { url 'https://maven.aliyun.com/nexus/content/repositories/central' }
        // jcenter
        maven { url 'https://maven.aliyun.com/nexus/content/repositories/jcenter' }
        // public
        maven { url 'https://maven.aliyun.com/nexus/content/groups/public' }
        //google
        maven { url 'https://maven.aliyun.com/nexus/content/repositories/google' }
        //gradle-plugin
        maven { url 'https://maven.aliyun.com/nexus/content/repositories/gradle-plugin' }
        //apache snapshots
        maven { url 'https://maven.aliyun.com/nexus/content/repositories/apache-snapshots' }
    }

    task publishAarToSonatype(type: GradleBuild) {
        tasks = [
                'build',
                'publishMavenJavaPublicationToOssrhRepository'
        ]
    }
}

ext {
    compileSdkVersion = 33
    buildToolsVersion = "33.0.2"
    ndkVersion = "23.1.7779620"
    cmakeVersion = "3.18.1"
    userOrg = 'canyie'
    groupId = 'top.canyie.pine'
    repoName = 'pine'
    website = "https://github.com/canyie/pine"
}

//ext.uploadRepositories = {
//    maven {
//        name 'ossrh'
//        url 'https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/'
//        credentials {
//            username localProperties['sonatypeUsername']
//            password localProperties['sonatypePassword']
//        }
//    }
//}
//
//ext.licenses = {
//    license {
//        name = 'Anti 996 License Version 1.0'
//        url = 'https://github.com/996icu/996.ICU/blob/master/LICENSE'
//    }
//}
//
//ext.scm = {
//    connection = 'scm:git:https://github.com/canyie/pine.git'
//    url = 'https://github.com/canyie/pine'
//}
//
//ext.developers = {
//    developer {
//        name = 'canyie'
//        url = 'https://github.com/canyie'
//    }
//}

task clean(type: Delete) {
    delete rootProject.buildDir
}
