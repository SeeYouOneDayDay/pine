apply plugin: 'com.android.library'
//apply plugin: 'maven-publish'
//apply plugin: 'signing'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    ndkVersion rootProject.ext.ndkVersion
    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'

        externalNativeBuild {
            cmake {
                arguments '-DANDROID_STL=none' // built-in libcxx introduced exception, so use our own instead
                abiFilters 'armeabi-v7a', 'arm64-v8a'
                targets 'pine'
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    externalNativeBuild {
        cmake {
            path "src/main/cpp/CMakeLists.txt"
            version rootProject.ext.cmakeVersion
        }
    }

//    packagingOptions {
//        resources {
//            excludes += '/META-INF/**'
//            excludes += '/*.properties'
//        }
//    }
//
//    publishing {
//        singleVariant("release") {
//            withSourcesJar()
//            withJavadocJar()
//        }
//    }

    buildFeatures {
        prefab true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    dexOptions {
        preDexLibraries false
        maxProcessCount 8
        javaMaxHeapSize "4g"
    }
    aaptOptions {
        cruncherEnabled = false
        useNewCruncher = false
    }
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
        warningsAsErrors false
        disable "UnusedResources"
        textOutput "stdout"
        textReport false
        disable 'RestrictedApi'
    }
}

tasks.withType(Javadoc) {
    options.addStringOption('Xdoclint:none', '-quiet')
    options.addStringOption('encoding', 'UTF-8')
    options.addStringOption('charSet', 'UTF-8')
    options.encoding = "UTF-8"
}


dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'dev.rikka.ndk.thirdparty:cxx:1.2.0'
}

//publishing {
//    publications {
//        mavenJava(MavenPublication) {
//            group rootProject.groupId
//            artifactId 'core'
//            version '0.2.6'
//            // the components are created only during the afterEvaluate phase
//            afterEvaluate {
//                from components.release
//            }
//            pom {
//                name = rootProject.repoName
//                description = 'pine hook core library'
//                url = rootProject.website
//                licenses rootProject.licenses
//                developers rootProject.developers
//                scm rootProject.scm
//            }
//        }
//    }
//    repositories rootProject.uploadRepositories
//}
//
//signing {
//    sign publishing.publications.mavenJava
//}
